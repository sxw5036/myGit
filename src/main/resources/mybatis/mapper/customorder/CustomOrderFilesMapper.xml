<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lwxf.industry4.webapp.domain.dao.customorder.CustomOrderFilesDao">
    <resultMap id="CustomOrderFilesMap" type="com.lwxf.industry4.webapp.domain.entity.customorder.CustomOrderFiles">
        <id column="id" property="id" jdbcType="CHAR" />
        <result column="path" property="path" jdbcType="VARCHAR" />
        <result column="full_path" property="fullPath" jdbcType="VARCHAR" />
        <result column="mime" property="mime" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="custom_order_id" property="customOrderId" jdbcType="CHAR" />
        <result column="original_mime" property="originalMime" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="creator" property="creator" jdbcType="CHAR" />
        <result column="created" property="created" jdbcType="TIMESTAMP" />
        <result column="type" property="type" jdbcType="TINYINT" />
        <result column="category" property="category" jdbcType="TINYINT" />
        <result column="belong_id" property="belongId" jdbcType="CHAR" />
    </resultMap>
    <sql id="columns">
id, path, full_path, mime, name, custom_order_id, original_mime, status, creator, created, type, belong_id,category
</sql>

    <select id="selectById" resultMap="CustomOrderFilesMap" parameterType="String">
SELECT <include refid="columns" />
FROM   custom_order_files
WHERE  id = #{id}
</select>

    <select id="selectByFilter" resultMap="CustomOrderFilesMap">
SELECT <include refid="columns" />
FROM   custom_order_files
<where><trim prefixOverrides="AND">
<if test="id != null">
    id = #{id}
</if>
<if test="path != null">
    AND path = #{path}
</if>
<if test="fullPath != null">
    AND full_path = #{fullPath}
</if>
<if test="mime != null">
    AND mime = #{mime}
</if>
<if test="name != null">
    AND name = #{name}
</if>
<if test="customOrderId != null">
    AND custom_order_id = #{customOrderId}
</if>
<if test="originalMime != null">
    AND original_mime = #{originalMime}
</if>
<if test="status != null">
    AND status = #{status}
</if>
<if test="creator != null">
    AND creator = #{creator}
</if>
<if test="created != null">
    AND created = #{created}
</if>
<if test="type != null">
    AND type = #{type}
</if>
    <if test="category != null">
    AND category = #{category}
</if>
<if test="belongId != null">
    AND belong_id = #{belongId}
</if>
</trim></where>

</select>

    <select id="selectByOrderIdAndType" resultMap="CustomOrderFilesMap">
        select
        <include refid="columns"/>
        from custom_order_files
        <where><trim prefixOverrides="AND">
            <if test="customOrderId != null">
                custom_order_id = #{customOrderId}
            </if>
            <if test="type != null">
                AND type = #{type}
            </if>
            <if test="belongId != null">
                AND belong_id = #{belongId}
            </if>
        </trim></where>
        and status=1
        order by created desc
    </select>

    <select id="selectByOrderId" resultMap="CustomOrderFilesMap">
        select
        <include refid="columns"/>
        from custom_order_files
        where custom_order_id = #{customOrderId}
    </select>


    <delete id="deleteByOrderId">
        delete from
        custom_order_files
        where custom_order_id = #{orderId}
    </delete>



    <insert id="insert" useGeneratedKeys="false">
INSERT INTO 
custom_order_files(id, path, full_path, mime, name, custom_order_id, original_mime, status, creator, created, type, belong_id,category)
            VALUES(#{id}, #{path}, #{fullPath}, #{mime}, #{name}, #{customOrderId}, #{originalMime}, #{status}, #{creator}, #{created}, #{type}, #{belongId},#{category})
</insert>

    <update id="updateByMapContext">
UPDATE custom_order_files
<set><trim suffixOverrides=",">
<if test="_parameter.containsKey('path') and path != null">
    path = #{path},
</if>
    <if test="_parameter.containsKey('fullPath') and fullPath != null">
    full_path = #{fullPath},
</if>
    <if test="_parameter.containsKey('mime') and mime != null">
    mime = #{mime},
</if>
    <if test="_parameter.containsKey('name') and name != null">
    name = #{name},
</if>
    <if test="_parameter.containsKey('customOrderId') and customOrderId != null">
    custom_order_id = #{customOrderId},
</if>
    <if test="_parameter.containsKey('originalMime') and originalMime != null">
    original_mime = #{originalMime},
</if>
    <if test="_parameter.containsKey('status') and status != null">
    status = #{status},
</if>
    <if test="_parameter.containsKey('creator') and creator != null">
    creator = #{creator},
</if>
    <if test="_parameter.containsKey('created') and created != null">
    created = #{created},
</if>
    <if test="_parameter.containsKey('type') and type != null">
    type = #{type},
</if>
    <if test="_parameter.containsKey('category') and category != null">
        category = #{category},
</if>
    <if test="_parameter.containsKey('belongId') and belongId != null">
    belong_id = #{belongId}
</if>
</trim></set>
WHERE  id = #{id}
</update>

    <delete id="deleteById" parameterType="String">
DELETE FROM   custom_order_files
WHERE  id = #{id}
</delete>

    <select id="findByBelongIdAndTypeAndOrderId" resultMap="CustomOrderFilesMap">
        SELECT
        <include refid="columns"/>
        from custom_order_files
        where belong_id = #{belongId}
        and category = #{category}
        and custom_order_id = #{customOrderId}
        order by created desc limit 1

    </select>

    <delete id="deleteByBelongId">
        delete from custom_order_files where belong_id = #{belongId}
    </delete>

    <update id="updateByIds">
        update custom_order_files
        <set><trim suffixOverrides=",">
            <if test="_parameter.containsKey('path') and path != null">
                path = #{path},
            </if>
            <if test="_parameter.containsKey('fullPath') and fullPath != null">
                full_path = #{fullPath},
            </if>
            <if test="_parameter.containsKey('mime') and mime != null">
                mime = #{mime},
            </if>
            <if test="_parameter.containsKey('name') and name != null">
                name = #{name},
            </if>
            <if test="_parameter.containsKey('customOrderId') and customOrderId != null">
                custom_order_id = #{customOrderId},
            </if>
            <if test="_parameter.containsKey('originalMime') and originalMime != null">
                original_mime = #{originalMime},
            </if>
            <if test="_parameter.containsKey('status') and status != null">
                status = #{status},
            </if>
            <if test="_parameter.containsKey('creator') and creator != null">
                creator = #{creator},
            </if>
            <if test="_parameter.containsKey('created') and created != null">
                created = #{created},
            </if>
            <if test="_parameter.containsKey('type') and type != null">
                type = #{type},
            </if>
            <if test="_parameter.containsKey('category') and category != null">
                category = #{category},
            </if>
            <if test="_parameter.containsKey('belongId') and belongId != null">
                belong_id = #{belongId}
            </if>
        </trim></set>
        where id in
        <foreach collection="id" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </update>

</mapper>
