<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lwxf.industry4.webapp.domain.dao.customorder.ProduceOrderDao">
    <resultMap id="ProduceOrderMap" type="com.lwxf.industry4.webapp.domain.entity.customorder.ProduceOrder">
        <id column="id" property="id" jdbcType="CHAR" />
        <result column="custom_order_id" property="customOrderId" jdbcType="CHAR" />
        <result column="custom_order_no" property="customOrderNo" jdbcType="VARCHAR" />
        <result column="no" property="no" jdbcType="VARCHAR" />
        <result column="creator" property="creator" jdbcType="CHAR" />
        <result column="created" property="created" jdbcType="DATE" />
        <result column="update_user" property="updateUser" jdbcType="CHAR" />
        <result column="update_time" property="updateTime" jdbcType="DATE" />
        <result column="completion_time" property="completionTime" jdbcType="DATE" />
        <result column="count" property="count" jdbcType="INTEGER" />
        <result column="notes" property="notes" jdbcType="VARCHAR" />
        <result column="amount" property="amount" jdbcType="DECIMAL" />
        <result column="coordination_name" property="coordinationName" jdbcType="VARCHAR" />
        <result column="coordination_account" property="coordinationAccount" jdbcType="VARCHAR" />
        <result column="coordination_bank" property="coordinationBank" jdbcType="VARCHAR" />
        <result column="is_pay" property="pay" jdbcType="BIT" />
        <result column="type" property="type" jdbcType="BIT" />
        <result column="way" property="way" jdbcType="BIT" />
        <result column="state" property="state" jdbcType="BIT" />
        <result column="planned_time" property="plannedTime" jdbcType="DATE" />
        <result column="actual_time" property="actualTime" jdbcType="DATE" />

    </resultMap>
    <resultMap id="ProduceOrderDtoMap" type="com.lwxf.industry4.webapp.domain.dto.customorder.ProduceOrderDto">
        <id column="id" property="id" jdbcType="CHAR" />
        <result column="custom_order_id" property="customOrderId" jdbcType="CHAR" />
        <result column="custom_order_no" property="customOrderNo" jdbcType="VARCHAR" />
        <result column="no" property="no" jdbcType="VARCHAR" />
        <result column="creator" property="creator" jdbcType="CHAR" />
        <result column="created" property="created" jdbcType="DATE" />
        <result column="update_user" property="updateUser" jdbcType="CHAR" />
        <result column="update_time" property="updateTime" jdbcType="DATE" />
        <result column="completion_time" property="completionTime" jdbcType="DATE" />
        <result column="count" property="count" jdbcType="INTEGER" />
        <result column="notes" property="notes" jdbcType="VARCHAR" />
        <result column="amount" property="amount" jdbcType="DECIMAL" />
        <result column="coordination_name" property="coordinationName" jdbcType="VARCHAR" />
        <result column="coordination_account" property="coordinationAccount" jdbcType="VARCHAR" />
        <result column="coordination_bank" property="coordinationBank" jdbcType="VARCHAR" />
        <result column="is_pay" property="pay" jdbcType="BIT" />
        <result column="type" property="type" jdbcType="BIT" />
        <result column="way" property="way" jdbcType="BIT" />
        <result column="state" property="state" jdbcType="BIT" />
        <result column="updateUserName" property="updateUserName"/>
        <result column="creatorName" property="creatorName"/>
        <result column="planned_time" property="plannedTime" jdbcType="DATE" />
        <result column="actual_time" property="actualTime" jdbcType="DATE" />
        <result column="estimatedDeliveryDate" property="estimatedDeliveryDate" jdbcType="DATE"/>
        <result column="merchandiserName" property="merchandiserName"/>
        <result column="customerName" property="customerName"/>
        <result column="dealerName" property="dealerName"/>
        <result column="payTime" property="payTime"/>
    </resultMap>
    <sql id="columns">
id, custom_order_id, custom_order_no, no, creator, created, update_user, update_time, completion_time, count, notes, amount, coordination_name, coordination_account, coordination_bank, is_pay, type, way,state, planned_time, actual_time
</sql>
    <sql id="columnDtos">
p.id, p.custom_order_id, p.custom_order_no, p.no, p.creator, p.created, p.update_user, p.update_time, p.completion_time, p.count, p.notes, p.amount, p.coordination_name, p.coordination_account, p.coordination_bank, p.is_pay, p.type, p.way,p.state, u.name creatorName,uu.name updateUserName, p.planned_time, p.actual_time
</sql>

    <select id="selectById" resultMap="ProduceOrderMap" parameterType="String">
        SELECT <include refid="columns" />
        FROM   produce_order
        WHERE  id = #{id}
    </select>

    <select id="selectByFilter" resultMap="ProduceOrderMap">
        SELECT <include refid="columns" />
        FROM   produce_order
        <where><trim prefixOverrides="AND">
            <if test="id != null">
                id = #{id}
            </if>
            <if test="customOrderId != null">
                AND custom_order_id = #{customOrderId}
            </if>
            <if test="customOrderNo != null">
                AND custom_order_no = #{customOrderNo}
            </if>
            <if test="no != null">
                AND no = #{no}
            </if>
            <if test="creator != null">
                AND creator = #{creator}
            </if>
            <if test="created != null">
                AND created = #{created}
            </if>
            <if test="updateUser != null">
                AND update_user = #{updateUser}
            </if>
            <if test="updateTime != null">
                AND update_time = #{updateTime}
            </if>
            <if test="completionTime != null">
                AND completion_time = #{completionTime}
            </if>
            <if test="count != null">
                AND count = #{count}
            </if>
            <if test="notes != null">
                AND notes = #{notes}
            </if>
            <if test="amount != null">
                AND amount = #{amount}
            </if>
            <if test="coordinationName != null">
                AND coordination_name = #{coordinationName}
            </if>
            <if test="coordinationAccount != null">
                AND coordination_account = #{coordinationAccount}
            </if>
            <if test="coordinationBank != null">
                AND coordination_bank = #{coordinationBank}
            </if>
            <if test="pay != null">
                AND is_pay = #{pay}
            </if>
            <if test="type != null">
                AND type = #{type}
            </if>
            <if test="way != null">
                AND way = #{way}
            </if>
            <if test="state != null">
                AND state = #{state}
            </if>
            <if test="plannedTime != null">
                AND planned_time = #{plannedTime}
            </if>
            <if test="actualTime != null">
                AND actual_time = #{actualTime}
            </if>
        </trim></where>

    </select>

    <select id="findByOrderId" resultType="java.util.Map">
        SELECT id,`count`,notes,type,way,coordination_name as coordinationName,amount,coordination_bank as coordinationBank,
         (case type
         when 0 then '柜体'
         when 1 then '门板'
         when 2 then '五金'
         ELSE '未知' END
          ) typeName ,
        (case way
         when 0 then '自产'
         when 1 then '外协'
         when 2 then '特供实木'
         ELSE '未知' END
        ) wayName
        from produce_order
        where custom_order_id = #{orderId}
    </select>

    <insert id="insert" useGeneratedKeys="false">
INSERT INTO
produce_order(id, custom_order_id, custom_order_no, no, creator, created, update_user, update_time, completion_time, count, notes, amount, coordination_name, coordination_account, coordination_bank, is_pay, type, way,state, planned_time, actual_time)
       VALUES(#{id}, #{customOrderId}, #{customOrderNo}, #{no}, #{creator}, #{created}, #{updateUser}, #{updateTime}, #{completionTime}, #{count}, #{notes}, #{amount}, #{coordinationName}, #{coordinationAccount}, #{coordinationBank}, #{pay}, #{type}, #{way},#{state}, #{plannedTime}, #{actualTime})
</insert>

    <update id="updateByMapContext">
        UPDATE produce_order
        <set><trim suffixOverrides=",">
            <if test="_parameter.containsKey('updateUser')">
                update_user = #{updateUser},
            </if>
            <if test="_parameter.containsKey('updateTime')">
                update_time = #{updateTime},
            </if>
            <if test="_parameter.containsKey('completionTime')">
                completion_time = #{completionTime},
            </if>
            <if test="_parameter.containsKey('count') and count != null">
                count = #{count},
            </if>
            <if test="_parameter.containsKey('notes')">
                notes = #{notes},
            </if>
            <if test="_parameter.containsKey('amount')">
                amount = #{amount},
            </if>
            <if test="_parameter.containsKey('coordinationName')">
                coordination_name = #{coordinationName},
            </if>
            <if test="_parameter.containsKey('coordinationAccount')">
                coordination_account = #{coordinationAccount},
            </if>
            <if test="_parameter.containsKey('coordinationBank')">
                coordination_bank = #{coordinationBank},
            </if>
            <if test="_parameter.containsKey('pay') and pay != null">
                is_pay = #{pay},
            </if>
            <if test="_parameter.containsKey('type') and type != null">
                type = #{type},
            </if>
            <if test="_parameter.containsKey('way') and way != null">
                way = #{way}
            </if>
            <if test="_parameter.containsKey('state') and state != null">
                state = #{state}
            </if>
            <if test="_parameter.containsKey('plannedTime')">
                planned_time = #{plannedTime},
            </if>
            <if test="_parameter.containsKey('actualTime')">
                actual_time = #{actualTime}
            </if>
        </trim></set>
        WHERE  id = #{id}
    </update>

    <delete id="deleteById" parameterType="String">
DELETE FROM   produce_order
WHERE  id = #{id}
</delete>

    <select id="findOneById" resultMap="ProduceOrderDtoMap">
      select <include refid="columnDtos"/> from produce_order p left join user u on p.creator = u.id left join user uu on p.update_user = uu.id where p.id = #{id}
    </select>

    <select id="findListByFilter" resultMap="ProduceOrderDtoMap">
        select <include refid="columnDtos"/>,c.name dealerName,o.estimated_delivery_date estimatedDeliveryDate,uuu.name customerName,
        uuuu.name merchandiserName,pay.audited payTime
        from produce_order p
        left join user u on p.creator = u.id
        left join user uu on p.update_user = uu.id
        left join custom_order o on o.id = p.custom_order_id
        left join company c on o.company_id = c.id
        left join user uuu on o.customer_id = uuu.id
        left join user uuuu on o.merchandiser = uuuu.id
        left join payment pay on pay.custom_order_id = o.id
        <where>
            <trim prefixOverrides="AND">
                pay.funds = #{funds}
                <if test="no != null">
                    AND p.no = #{no}
                </if>
                <if test="orderId != null">
                    AND p.custom_order_id = #{orderId}
                </if>
                <if test="orderNo != null">
                    AND p.custom_order_no = #{orderNo}
                </if>
                <if test="state!=null">
                    AND p.state in
                    <foreach collection="state" item="sta" open="(" close=")" separator=",">
                        #{sta}
                    </foreach>
                </if>
                <if test="way!=null">
                    AND p.way in
                    <foreach collection="way" item="w" open="(" close=")" separator=",">
                        #{w}
                    </foreach>
                </if>
                <if test="type!=null">
                    AND p.type in
                    <foreach collection="type" item="t" open="(" close=")" separator=",">
                        #{t}
                    </foreach>
                </if>
                <if test="pay!=null">
                    AND p.is_pay = #{pay}
                </if>
                <if test="plannedTime==1">
                    AND p.planned_time is null
                </if>
                <if test="plannedTime==2">
                    AND p.planned_time is not null
                </if>
            </trim>
        </where>
    </select>

    <select id="findListByIds" resultMap="ProduceOrderMap">
        select <include refid="columns"/> from produce_order where id in
        <foreach collection="list" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </select>

    <select id="findListByOrderId" resultMap="ProduceOrderDtoMap">
        select <include refid="columnDtos"/> from produce_order p left join user u on p.creator = u.id left join user uu on p.update_user = uu.id where p.custom_order_id = #{id}
    </select>

    <select id="findIncompleteListByOrderId" resultMap="ProduceOrderDtoMap">
        select <include refid="columnDtos"/> from produce_order p left join user u on p.creator = u.id left join user uu on p.update_user = uu.id where p.custom_order_id = #{id}
        and p.state in
        <foreach collection="state" item="s" open="(" close=")" separator=",">
            #{s}
        </foreach>
    </select>

    <update id="updatePayByOrderIdAndWays">
        update produce_order set is_pay = true where custom_order_id = #{orderId} and way in
        <foreach collection="ways" open="(" close=")" item="way" separator=",">
            #{way}
        </foreach>
    </update>
    <select id="findListByOrderIdAndWays" resultMap="ProduceOrderMap">
        select <include refid="columns"/> from produce_order where custom_order_id = #{orderId} and way in
        <foreach collection="ways" open="(" close=")" item="way" separator=",">
            #{way}
        </foreach>
    </select>

    <update id="updateStateByIds">
        update produce_order set state = #{state},actual_time = #{actualTime} where id in
        <foreach collection="ids" open="(" close=")" item="id" separator=",">
            #{id}
        </foreach>
    </update>
    <update id="updatePlanTimeByIds">
        update produce_order set planned_time = #{planTime} where id in
        <foreach collection="ids" open="(" close=")" item="id" separator=",">
            #{id}
        </foreach>
    </update>

    <select id="findProduceOrderList" resultMap="ProduceOrderMap">
        SELECT po.custom_order_id ,po.type,po.custom_order_no,co.created,po.way from produce_order po
        left join custom_order co on po.custom_order_id=co.id
        <where><trim prefixOverrides="AND">
            <if test="orderNo != null">
                 co.no like '%${orderNo}%'
            </if>
            <if test="startTime != null">
                AND co.created &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                AND co.created &lt; #{endTime}
            </if>
            <if test="type != null">
                AND po.type = #{type}
            </if>
        and po.state=2
        </trim></where>
        order by created desc
    </select>


</mapper>
