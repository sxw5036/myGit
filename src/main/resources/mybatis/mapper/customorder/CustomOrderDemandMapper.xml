<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lwxf.industry4.webapp.domain.dao.customorder.CustomOrderDemandDao">
    <resultMap id="CustomOrderDemandMap" type="com.lwxf.industry4.webapp.domain.entity.customorder.CustomOrderDemand">
        <id column="id" property="id" jdbcType="CHAR" />
        <id column="design_scheme" property="designScheme" jdbcType="CHAR" />
        <result column="content" property="content" jdbcType="LONGVARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="product_series" property="productSeries" jdbcType="VARCHAR" />
        <result column="product_model" property="productModel" jdbcType="VARCHAR" />
        <result column="creator" property="creator" jdbcType="CHAR" />
        <result column="created" property="created" jdbcType="TIMESTAMP" />
        <result column="custom_order_id" property="customOrderId" jdbcType="CHAR" />
        <result column="no" property="no" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="CustomOrderDemandMapDto" type="com.lwxf.industry4.webapp.domain.dto.customorder.CustomOrderDemandDto">
        <id column="id" property="id" jdbcType="CHAR" />
        <id column="design_scheme" property="designScheme" jdbcType="CHAR" />
        <result column="content" property="content" jdbcType="LONGVARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="product_series" property="productSeries" jdbcType="VARCHAR" />
        <result column="product_model" property="productModel" jdbcType="VARCHAR" />
        <result column="designSchemeName" property="designSchemeName" jdbcType="VARCHAR" />
        <result column="productSeriesName" property="productSeriesName" jdbcType="VARCHAR" />
        <result column="creator" property="creator" jdbcType="CHAR" />
        <result column="created" property="created" jdbcType="TIMESTAMP" />
        <result column="custom_order_id" property="customOrderId" jdbcType="CHAR" />
        <result column="no" property="no" jdbcType="VARCHAR"/>
        <result property="creatorName" column="creatorName"/>
    </resultMap>
    <sql id="columns">
id, content, name, creator, created, custom_order_id,no,design_scheme,product_series,product_model
</sql>

    <sql id="colunmDtos">
d.id, d.content, d.name, d.creator, d.created, d.custom_order_id,d.no,d.design_scheme,d.product_series,d.product_model,u.name creatorName
    </sql>

    <select id="selectById" resultMap="CustomOrderDemandMap" parameterType="String">
SELECT
<include refid="columns"/>
FROM   custom_order_demand
WHERE  id = #{id}
</select>

    <select id="selectByDemandId" resultMap="CustomOrderDemandMapDto" parameterType="String">
SELECT
cod.*, ds.name as designSchemeName,fps.name as productSeriesName,u.name creatorName
FROM   custom_order_demand cod
left join design_scheme ds on ds.id = cod.design_scheme
left join finished_product_series fps on fps.id = cod.product_series
left join user u on cod.creator = u.id
WHERE  cod.id = #{id}
order by cod.created desc
</select>

    <select id="selectByFilter" resultMap="CustomOrderDemandMap">
SELECT <include refid="columns" />
FROM   custom_order_demand
<where><trim prefixOverrides="AND">
<if test="id != null">
    id = #{id}
</if>
<if test="content != null">
    AND content = #{content}
</if>
<if test="name != null">
    AND name = #{name}
</if>
<if test="creator != null">
    AND creator = #{creator}
</if>
<if test="created != null">
    AND created = #{created}
</if>
<if test="customOrderId != null">
    AND custom_order_id = #{customOrderId}
</if>
    <if test="no != null">
    AND no = #{no}
</if>
    <if test="designScheme != null">
    AND design_scheme = #{designScheme}
</if>
    <if test="productSeries != null">
    AND product_series = #{productSeries}
</if>
    <if test="productModel != null">
    AND product_model = #{productModel}
</if>
</trim></where>

</select>

    <select id="findByorderId" resultMap="CustomOrderDemandMap">
      select
      id, content, created,no,name
        from custom_order_demand
        where custom_order_id = #{orderId}
        order by created desc
    </select>

    <delete id="deleteByOrderId">
        delete from
        custom_order_demand
        where custom_order_id = #{orderId}
    </delete>



    <insert id="insert" useGeneratedKeys="false">
INSERT INTO 
custom_order_demand(id, content, name, creator, created, custom_order_id,no,design_scheme,product_series,product_model)
             VALUES(#{id}, #{content}, #{name}, #{creator}, #{created}, #{customOrderId},#{no},#{designScheme},#{productSeries},#{productModel})
</insert>

    <update id="updateByMapContext">
UPDATE custom_order_demand
<set><trim suffixOverrides=",">
<if test="_parameter.containsKey('content')">
    content = #{content},
</if>
    <if test="_parameter.containsKey('name') and name != null">
    name = #{name},
</if>
    <if test="_parameter.containsKey('creator') and creator != null">
    creator = #{creator},
</if>
    <if test="_parameter.containsKey('created') and created != null">
    created = #{created},
</if>
    <if test="_parameter.containsKey('customOrderId') and customOrderId != null">
    custom_order_id = #{customOrderId}
</if>
    <if test="_parameter.containsKey('no') and no != null">
        no = #{no}
</if>
    <if test="_parameter.containsKey('designScheme') and designScheme != null">
        design_scheme = #{designScheme}
</if>
    <if test="_parameter.containsKey('productSeries') and productSeries != null">
        product_series = #{productSeries}
</if>
    <if test="_parameter.containsKey('productModel') and productModel != null">
        product_model = #{productModel}
</if>
</trim></set>
WHERE  id = #{id}
</update>

    <delete id="deleteById" parameterType="String">
DELETE FROM   custom_order_demand
WHERE  id = #{id}
</delete>


    <select id="findListByOrderId" resultMap="CustomOrderDemandMapDto">
      select <include refid="colunmDtos"/> from custom_order_demand d left join user u on d.creator = u.id
        where d.custom_order_id = #{id}
    </select>
</mapper>
