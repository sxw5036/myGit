<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lwxf.industry4.webapp.domain.dao.product.ProductMaterialDao">
    <resultMap id="ProductMaterialMap" type="com.lwxf.industry4.webapp.domain.entity.product.ProductMaterial">
        <id column="id" property="id" jdbcType="CHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="notes" property="notes" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="TINYINT" />
        <result column="product_category_id" property="productCategoryId" jdbcType="VARCHAR" />
    </resultMap>
    <resultMap id="ProductMaterialDtoMap" type="com.lwxf.industry4.webapp.domain.dto.product.ProductMaterialDto">
        <id column="id" property="id" jdbcType="CHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="notes" property="notes" jdbcType="VARCHAR" />
        <result column="product_category_id" property="productCategoryId" jdbcType="VARCHAR" />
        <result column="productCategoryName" property="productCategoryName"/>
        <result column="type" property="type" jdbcType="TINYINT" />
    </resultMap>
    <sql id="columns">
id, name, notes, product_category_id,type
</sql>
    <sql id="columnsDto">
      m.id, m.name,m.notes, m.product_category_id,pc.name productCategoryName,m.type
    </sql>
    <select id="selectById" resultMap="ProductMaterialDtoMap" parameterType="String">
SELECT <include refid="columnsDto" />
from product_material m left join product_category pc on m.product_category_id = pc.id
WHERE  m.id = #{id}
</select>

    <select id="selectByFilter" resultMap="ProductMaterialMap">
SELECT <include refid="columns" />
FROM   product_material
<where><trim prefixOverrides="AND">
<if test="id != null">
    id = #{id}
</if>
<if test="name != null">
    AND name = #{name}
</if>
<if test="notes != null">
    AND notes = #{notes}
</if>
<if test="productCategoryId != null">
    AND product_category_id = #{productCategoryId}
</if>
</trim></where>

</select>

    <insert id="insert" useGeneratedKeys="false">
INSERT INTO 
product_material(id, name, notes, product_category_id,type)
          VALUES(#{id}, #{name}, #{notes}, #{productCategoryId},#{type})
</insert>

    <update id="updateByMapContext">
UPDATE product_material
<set><trim suffixOverrides=",">
<if test="_parameter.containsKey('name') and name != null">
    name = #{name},
</if>
    <if test="_parameter.containsKey('notes')">
    notes = #{notes},
</if>
    <if test="_parameter.containsKey('type')">
    type = #{type}
</if>
</trim></set>
WHERE  id = #{id}
</update>

    <delete id="deleteById" parameterType="String">
DELETE FROM   product_material
WHERE  id = #{id}
</delete>


    <select id="selectByCategoryId" resultMap="ProductMaterialDtoMap">
        select <include refid="columnsDto"/> from product_material m left join product_category pc on m.product_category_id = pc.id where m.product_category_id = #{id}
    </select>

    <select id="selectProductMaterialList" resultMap="ProductMaterialDtoMap">
        select <include refid="columnsDto"/> from product_material m left join product_category pc on m.product_category_id = pc.id where m.product_category_id = #{cid}
        <if test="name!=null">
            AND m.name like CONCAT('%',#{name},'%')
        </if>
    </select>

    <select id="isExistByProductMaterial" resultType="java.lang.Boolean">
        select count(*) from product_material where product_category_id = #{productCategoryId} and name = #{name}
        <if test="id!=null">
            AND id &lt;&gt; #{id}
        </if>
    </select>

    <select id="findAll" resultMap="ProductMaterialMap">
        SELECT <include refid="columns" />
        from product_material
    </select>

    <select id="selectByType" resultMap="ProductMaterialMap">
        select
        <include refid="columns"></include>
        from product_material
        where type = #{type}
    </select>


</mapper>
