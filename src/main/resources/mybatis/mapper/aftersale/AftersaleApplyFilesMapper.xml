<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lwxf.industry4.webapp.domain.dao.aftersale.AftersaleApplyFilesDao">
    <resultMap id="AftersaleApplyFilesMap" type="com.lwxf.industry4.webapp.domain.entity.aftersale.AftersaleApplyFiles">
        <id column="id" property="id" jdbcType="CHAR" />
        <result column="path" property="path" jdbcType="VARCHAR" />
        <result column="full_path" property="fullPath" jdbcType="VARCHAR" />
        <result column="mime" property="mime" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="original_mime" property="originalMime" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="creator" property="creator" jdbcType="CHAR" />
        <result column="created" property="created" jdbcType="TIMESTAMP" />
        <result column="aftersale_apply_id" property="aftersaleApplyId" jdbcType="CHAR" />
    </resultMap>
    <sql id="columns">
id, path, full_path, mime, name, original_mime, status, creator, created, aftersale_apply_id
</sql>

    <select id="selectById" resultMap="AftersaleApplyFilesMap" parameterType="String">
SELECT <include refid="columns" />
FROM   aftersale_apply_files
WHERE  id = #{id}
</select>
    <select id="findFilesByAfterId" resultMap="AftersaleApplyFilesMap" parameterType="String">
        SELECT <include refid="columns" />
        FROM   aftersale_apply_files
        WHERE  aftersale_apply_id = #{aftersaleId}
    </select>

    <select id="selectByFilter" resultMap="AftersaleApplyFilesMap">
SELECT <include refid="columns" />
FROM   aftersale_apply_files
<where><trim prefixOverrides="AND">
<if test="id != null">
    id = #{id}
</if>
<if test="path != null">
    AND path = #{path}
</if>
<if test="fullPath != null">
    AND full_path = #{fullPath}
</if>
<if test="mime != null">
    AND mime = #{mime}
</if>
<if test="name != null">
    AND name = #{name}
</if>
<if test="originalMime != null">
    AND original_mime = #{originalMime}
</if>
<if test="status != null">
    AND status = #{status}
</if>
<if test="creator != null">
    AND creator = #{creator}
</if>
<if test="created != null">
    AND created = #{created}
</if>
<if test="aftersaleApplyId != null">
    AND aftersale_apply_id = #{aftersaleApplyId}
</if>
</trim></where>

</select>

    <insert id="insert" useGeneratedKeys="false">
INSERT INTO 
aftersale_apply_files(id, path, full_path, mime, name, original_mime, status, creator, created, aftersale_apply_id)
               VALUES(#{id}, #{path}, #{fullPath}, #{mime}, #{name}, #{originalMime}, #{status}, #{creator}, #{created}, #{aftersaleApplyId})
</insert>

    <update id="updateByMapContext">
UPDATE aftersale_apply_files
<set><trim suffixOverrides=",">
<if test="_parameter.containsKey('path') and path != null">
    path = #{path},
</if>
    <if test="_parameter.containsKey('fullPath') and fullPath != null">
    full_path = #{fullPath},
</if>
    <if test="_parameter.containsKey('mime') and mime != null">
    mime = #{mime},
</if>
    <if test="_parameter.containsKey('name') and name != null">
    name = #{name},
</if>
    <if test="_parameter.containsKey('originalMime') and originalMime != null">
    original_mime = #{originalMime},
</if>
    <if test="_parameter.containsKey('status') and status != null">
    status = #{status},
</if>
    <if test="_parameter.containsKey('creator') and creator != null">
    creator = #{creator},
</if>
    <if test="_parameter.containsKey('created') and created != null">
    created = #{created},
</if>
    <if test="_parameter.containsKey('aftersaleApplyId') and aftersaleApplyId != null">
    aftersale_apply_id = #{aftersaleApplyId}
</if>
</trim></set>
WHERE  id = #{id}
</update>

    <delete id="deleteById" parameterType="String">
DELETE FROM   aftersale_apply_files
WHERE  id = #{id}
</delete>

    <select id="findByPath" resultMap="AftersaleApplyFilesMap">
        select id from
    </select>

    <update id="updateFilesList">
        update aftersale_apply_files set status =1,aftersale_apply_id = #{id} where id in
        <foreach collection='imgIds'  item="fileId"  open="("   separator="," close=")">
            #{fileId}
        </foreach>
    </update>

    <select id="findListByOrderId" resultMap="AftersaleApplyFilesMap">
        select <include refid="columns"/> from aftersale_apply_files where aftersale_apply_id in (select a.id from aftersale_apply a where custom_order_id = #{orderId})
    </select>

    <delete id="deleteByOrderId">
        delete from aftersale_apply_files where aftersale_apply_id in (select a.id from aftersale_apply a where custom_order_id = #{orderId})
    </delete>

    <select id="findListByResultOrderId" resultMap="AftersaleApplyFilesMap">
        select <include refid="columns"/> from aftersale_apply_files where aftersale_apply_id in (select a.id from aftersale_apply a where result_order_id = #{orderId})
    </select>

    <delete id="deleteByResultOrderId">
        delete from aftersale_apply_files where aftersale_apply_id in (select a.id from aftersale_apply a where result_order_id = #{orderId})
    </delete>
    <update id="updateByIds">
        update aftersale_apply_files
        <set><trim suffixOverrides=",">
            <if test="_parameter.containsKey('path') and path != null">
                path = #{path},
            </if>
            <if test="_parameter.containsKey('fullPath') and fullPath != null">
                full_path = #{fullPath},
            </if>
            <if test="_parameter.containsKey('mime') and mime != null">
                mime = #{mime},
            </if>
            <if test="_parameter.containsKey('name') and name != null">
                name = #{name},
            </if>
            <if test="_parameter.containsKey('aftersaleApplyId') and customOrderId != null">
                aftersale_apply_id = #{aftersaleApplyId},
            </if>
            <if test="_parameter.containsKey('originalMime') and originalMime != null">
                original_mime = #{originalMime},
            </if>
            <if test="_parameter.containsKey('status') and status != null">
                status = #{status},
            </if>
            <if test="_parameter.containsKey('creator') and creator != null">
                creator = #{creator},
            </if>
            <if test="_parameter.containsKey('created') and created != null">
                created = #{created},
            </if>
            <if test="_parameter.containsKey('type') and type != null">
                type = #{type},
            </if>
            <if test="_parameter.containsKey('category') and category != null">
                category = #{category},
            </if>
        </trim></set>
        where id in
        <foreach collection="id" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </update>
</mapper>
