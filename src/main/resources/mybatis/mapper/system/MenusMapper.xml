<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lwxf.industry4.webapp.domain.dao.system.MenusDao">
    <resultMap id="MenusMap" type="com.lwxf.industry4.webapp.domain.entity.system.Menus">
        <id column="id" property="id" jdbcType="CHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="path" property="path" jdbcType="VARCHAR" />
        <result column="icon" property="icon" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="TINYINT" />
        <result column="is_folder" property="folder" jdbcType="BIT" />
        <result column="parent_id" property="parentId" jdbcType="CHAR" />
        <result column="is_out_link" property="outLink" jdbcType="BIT" />
        <result column="key" property="key" jdbcType="VARCHAR" />
        <result column="relevant_resource" property="relevantResource" jdbcType="TINYINT" />
        <result column="is_disabled" property="disabled" jdbcType="BIT" />
    </resultMap>
    <sql id="columns">
id, name, path, icon, type, is_folder, parent_id, is_out_link, `key`, relevant_resource, is_disabled
</sql>

    <select id="selectById" resultMap="MenusMap" parameterType="String">
SELECT <include refid="columns" />
FROM   menus
WHERE  id = #{id}
</select>

    <select id="selectByFilter" resultMap="MenusMap">
SELECT <include refid="columns" />
FROM   menus
<where><trim prefixOverrides="AND">
<if test="id != null">
    id = #{id}
</if>
<if test="name != null">
    AND name = #{name}
</if>
<if test="path != null">
    AND path = #{path}
</if>
<if test="icon != null">
    AND icon = #{icon}
</if>
<if test="type != null">
    AND type = #{type}
</if>
<if test="folder != null">
    AND is_folder = #{folder}
</if>
<if test="parentId != null">
    AND parent_id = #{parentId}
</if>
<if test="outLink != null">
    AND is_out_link = #{outLink}
</if>
<if test="key != null">
    AND `key` = #{key}
</if>
    <if test="relevantResource != null">
        AND relevant_resource = #{relevantResource}
    </if>
    <if test="disabled != null">
        AND is_disabled = #{disabled}
    </if>
</trim></where>

</select>

    <insert id="insert" useGeneratedKeys="false">
INSERT INTO 
 menus(id, name, path, icon, type, is_folder, parent_id, is_out_link, `key`, relevant_resource, is_disabled)
VALUES(#{id}, #{name}, #{path}, #{icon}, #{type}, #{folder}, #{parentId}, #{outLink}, #{key}, #{relevantResource}, #{disabled})
</insert>

    <update id="updateByMapContext">
UPDATE menus
<set><trim suffixOverrides=",">
<if test="_parameter.containsKey('name') and name != null">
    name = #{name},
</if>
    <if test="_parameter.containsKey('path')">
    path = #{path},
</if>
    <if test="_parameter.containsKey('icon')">
    icon = #{icon},
</if>
    <if test="_parameter.containsKey('folder') and folder != null">
    is_folder = #{folder},
</if>
    <if test="_parameter.containsKey('parentId')">
    parent_id = #{parentId},
</if>
    <if test="_parameter.containsKey('outLink') and outLink != null">
    is_out_link = #{outLink},
</if>
    <if test="_parameter.containsKey('disabled') and disabled != null">
        is_disabled = #{disabled}
    </if>
</trim></set>
WHERE  id = #{id}
</update>

    <delete id="deleteById" parameterType="String">
DELETE FROM   menus
WHERE  id = #{id}
</delete>

    <select id="findAll" resultMap="MenusMap">
        SELECT <include refid="columns" />
        FROM   menus
    </select>

    <select id="findListByMapContext" resultMap="MenusMap">
        select <include refid="columns"/> from menus
        <where><trim prefixOverrides="AND">
            <if test="ids != null and ids.size>0">
                id in
                <foreach collection="ids" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
            <if test="name != null">
                AND name = #{name}
            </if>
            <if test="path != null">
                AND path = #{path}
            </if>
            <if test="icon != null">
                AND icon = #{icon}
            </if>
            <if test="type != null">
                AND type = #{type}
            </if>
            <if test="folder != null">
                AND is_folder = #{folder}
            </if>
            <if test="parentId != null">
                AND parent_id = #{parentId}
            </if>
            <if test="outLink != null">
                AND is_out_link = #{outLink}
            </if>
            <if test="keys != null and keys.size>0">
                AND `key` in
                <foreach collection="keys" open="(" close=")" separator="," item="key">
                    #{key}
                </foreach>
            </if>
            <if test="_parameter.containsKey('disabled') and disabled != null">
                AND is_disabled = #{disabled}
            </if>
        </trim></where>
    </select>

    <select id="findOneByKey" resultMap="MenusMap">
        select <include refid="columns"/> from menus where `key` = #{key}
    </select>

    <select id="findByParentId" resultMap="MenusMap">
        select <include refid="columns"/> from menus where parent_id = #{id}
    </select>

    <delete id="deleteRolePermissionByKey" parameterType="String">
        delete from role_permission where menu_key = #{key} or module_key = #{key}
    </delete>
    <delete id="deleteEmployeePermissionByKey" parameterType="String">
        delete from employee_permission where menu_key = #{key} or module_key = #{key}
    </delete>

    <update id="updateNameByLikeKey">
        update menus set name = #{newName} where `key` like CONCAT('%',#{key},'%')
    </update>

    <select id="findListByLikeKey" resultMap="MenusMap">
        select <include refid="columns"/> from menus where `key` like CONCAT('%',#{key},'%')
    </select>

    <select id="findAllByTypeAndDisabled" resultMap="MenusMap">
        select <include refid="columns"/> from menus where type = #{type}
        <if test="disabled!=null">
            and is_disabled = #{disabled}
        </if>
        order by sort asc
    </select>
</mapper>
